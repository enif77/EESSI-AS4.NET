<?xml version="1.0" encoding="utf-8"?>
<configuration>

	<!-- NLog Configuration -->
	<configSections>
		<section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
	</configSections>
	<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" throwExceptions="true">

		<!-- Logging Layouts -->
		<variable name="exceptionVerboseLayout" value="${longdate} ${level:uppercase=true} [${threadid}] ${logger} ${message}${onexception:${newline}${exception:format=type,message,method,tostring:maxInnerExceptionLevel=5:innerFormat=shortType,message,method,tostring}}"/>
		<variable name="exceptionMinLayout" value="${longdate} ${level:uppercase=true} [${threadid}] ${logger} ${message}${onexception:${newline}${exception:format=message,stacktrace:separator=*:maxInnerExceptionLevel=5}${newline}}"/>
		<variable name="traceLayout" value="${longdate} ${level:uppercase=true} [${threadid}] ${logger} ${message}${onexception:${newline}${exception:format=tostring}}"/>
		<variable name="consoleLayout" value="${level:uppercase=true} ${logger:shortName=true} ${message}${onexception:${newline}${exception:format=tostring}}"/>

		<!-- Logging Targets-->
		<targets async="true">

			<!-- Logging (level "Debug")  to tracelog.txt file -->
			<target name="tracelog" xsi:type="File" fileName="./logs/console_tracelog_${shortdate}.txt" layout="${traceLayout}" concurrentWrites="true" keepFileOpen="false" encoding="iso-8859-2"/>

			<!-- Logging (level "Warn") to errorlog.txt file -->
			<target name="errorlog" xsi:type="File" fileName="./logs/console_errorlog_${shortdate}.txt" layout="${exceptionVerboseLayout}" concurrentWrites="true" keepFileOpen="false" encoding="iso-8859-2"/>

			<!-- Logging (level "Info") to console window -->
			<target name="console" xsi:type="ColoredConsole" layout="${consoleLayout}">
				<!--<highlight-word regex="(\d{2})\/(\d{2})\/(\d{4}) (\d{2}):(\d{2}):(\d{2}) \+(\d{2}):(\d{2})" foregroundColor="Magenta" />-->
				<!--<highlight-word regex="(')?(file:\/\/\/)?(?:[a-zA-Z.]\:|\\\\[\w\.]+\\[\w.$]+)\\(?:[\w.]+\\)*\w*([\w.])*(')?" foregroundColor="Blue" />-->
				<highlight-word regex="\([A-Z]{1}[a-zA-Z]+\)" foregroundColor="DarkYellow"/>				
				<!--<highlight-word regex="&lt;.+&gt;" foregroundColor="Magenta" />-->
				<highlight-word regex="\[[\w@.-]+\]" foregroundColor="DarkGray"/>
				<highlight-word regex="[a-z0-9\-]+(@[0-9\.]+)|([a-z0-9]+-){5}[a-z0-9]+" foregroundColor="DarkGray"/>
				<!--<highlight-row condition="contains(message, 'duplicate') or contains(message, 'Test')" foregroundColor="Magenta" />-->
				<highlight-word regex="(&quot;).+(&quot;)" foregroundColor="Yellow"/>
				<highlight-word regex=" Receipt | Delivered| Notified| Ack" foregroundColor="Green"/>
				<highlight-word regex=" Error | Nack| Exception" foregroundColor="Red"/>
				<highlight-word regex=" UserMessage | PullRequest " foregroundColor="Blue"/>
				<highlight-word regex=" SendingPMode | ReceivingPMode " foregroundColor="DarkCyan"/>
				<highlight-word regex="DeadLettered" foregroundColor="Magenta"/>	
				<highlight-word regex=" [0-9]+ " foregroundColor="Yellow"/>
				<highlight-word regex="\{|\}" foregroundColor="Blue"/>
				<!--<highlight-word regex="([A-Z][A-Z]?[a-z]+)+\.(([A-Z][A-Z]?[a-z]+)+\.?)+" foregroundColor="Blue" />-->
				<highlight-row condition="level = LogLevel.Error" backgroundColor="DarkRed" foregroundColor="White"/>
				<highlight-row condition="level = LogLevel.Fatal" backgroundColor="Red" foregroundColor="White"/>
				<highlight-row condition="level = LogLevel.Warn" foregroundColor="Magenta"/>
				<!--<highlight-word regex="OutMessages?|InMessages?" foregroundColor="DarkCyan" />
				<highlight-word regex="OutExceptions?|InExceptions?" foregroundColor="DarkRed" />-->
      </target>
    </targets>

    <!-- Logging Rules -->
    <rules>
      <!-- Logging Levels: Off, Fatal, Error, Warn, Info, Debug, Trace -->
      <logger name="*" minlevel="Debug" writeTo="console"/>
      <logger name="*" minlevel="Trace" writeTo="tracelog"/>
      <logger name="*" minlevel="Warn" writeTo="errorlog"/>
    </rules>
  </nlog>

  <!-- element below allows for signature verification logging -->
  <system.diagnostics>
    <sources>
      <source name="System.Security.Cryptography.Xml.SignedXml" switchName="XmlDsigLogSwitch">
        <listeners>
          <add name="xmlDsigLogFile"/>
        </listeners>
      </source>

      <source name="Eu.EDelivery.AS4.Common.DatastoreContext" switchName="EfLoggingSwitch">
        <listeners>
          <add name="efSqlLogFile"/>
        </listeners>
      </source>

    </sources>

    <switches>
      <add name="XmlDsigLogSwitch" value="Off"/>
      <!-- possible values: Off (0) Error (1) Warning (2) Info (3) Verbose (4) -->
      <add name="EfLoggingSwitch" value="Off"/>
    </switches>

    <sharedListeners>
      <add name="xmlDsigLogFile" type="System.Diagnostics.TextWriterTraceListener" initializeData="XmlDsigLog.txt"/>
      <add name="efSqlLogFile" type="System.Diagnostics.TextWriterTraceListener" initializeData="ef_sql.txt"/>
    </sharedListeners>

    <trace autoflush="true">
      <listeners>
        <add name="xmlDsigLogFile"/>
        <add name="efSqlLogFile"/>
      </listeners>
    </trace>
  </system.diagnostics>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8.1"/>
  </startup>

</configuration>
